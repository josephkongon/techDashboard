{
  "version": 3,
  "sources": ["../../react-addons-shallow-compare/index.js", "../../react-addons-update/index.js", "../../react-nestable/src/utils.ts", "../../react-nestable/src/Icon/Icon.tsx", "../../react-nestable/src/Icon/index.ts", "../../react-nestable/src/Nestable/NestableItem.tsx", "../../react-nestable/src/Nestable/Nestable.tsx", "../../react-nestable/src/Nestable/index.ts", "../../react-nestable/dist/types.js", "../../react-nestable/src/index.ts"],
  "sourcesContent": ["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule shallowCompare\n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Does a shallow comparison for props and state.\n * See ReactComponentWithPureRenderMixin\n * See also https://facebook.github.io/react/docs/shallow-compare.html\n */\nfunction shallowCompare(instance, nextProps, nextState) {\n  return (\n    !shallowEqual(instance.props, nextProps) ||\n    !shallowEqual(instance.state, nextState)\n  );\n}\n\nmodule.exports = shallowCompare;\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\nvar hasOwnProperty = {}.hasOwnProperty;\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nfunction shallowCopy(x) {\n  if (Array.isArray(x)) {\n    return x.concat();\n  } else if (x && typeof x === 'object') {\n    return _assign(new x.constructor(), x);\n  } else {\n    return x;\n  }\n}\n\nvar COMMAND_PUSH = '$push';\nvar COMMAND_UNSHIFT = '$unshift';\nvar COMMAND_SPLICE = '$splice';\nvar COMMAND_SET = '$set';\nvar COMMAND_MERGE = '$merge';\nvar COMMAND_APPLY = '$apply';\n\nvar ALL_COMMANDS_LIST = [\n  COMMAND_PUSH,\n  COMMAND_UNSHIFT,\n  COMMAND_SPLICE,\n  COMMAND_SET,\n  COMMAND_MERGE,\n  COMMAND_APPLY\n];\n\nvar ALL_COMMANDS_SET = {};\n\nALL_COMMANDS_LIST.forEach(function(command) {\n  ALL_COMMANDS_SET[command] = true;\n});\n\nfunction invariantArrayCase(value, spec, command) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected target of %s to be an array; got %s.',\n    command,\n    value\n  );\n  var specValue = spec[command];\n  invariant(\n    Array.isArray(specValue),\n    'update(): expected spec of %s to be an array; got %s. ' +\n      'Did you forget to wrap your parameter in an array?',\n    command,\n    specValue\n  );\n}\n\n/**\n * Returns a updated shallow copy of an object without mutating the original.\n * See https://facebook.github.io/react/docs/update.html for details.\n */\nfunction update(value, spec) {\n  invariant(\n    typeof spec === 'object',\n    'update(): You provided a key path to update() that did not contain one ' +\n      'of %s. Did you forget to include {%s: ...}?',\n    ALL_COMMANDS_LIST.join(', '),\n    COMMAND_SET\n  );\n\n  if (hasOwnProperty.call(spec, COMMAND_SET)) {\n    invariant(\n      Object.keys(spec).length === 1,\n      'Cannot have more than one key in an object with %s',\n      COMMAND_SET\n    );\n\n    return spec[COMMAND_SET];\n  }\n\n  var nextValue = shallowCopy(value);\n\n  if (hasOwnProperty.call(spec, COMMAND_MERGE)) {\n    var mergeObj = spec[COMMAND_MERGE];\n    invariant(\n      mergeObj && typeof mergeObj === 'object',\n      \"update(): %s expects a spec of type 'object'; got %s\",\n      COMMAND_MERGE,\n      mergeObj\n    );\n    invariant(\n      nextValue && typeof nextValue === 'object',\n      \"update(): %s expects a target of type 'object'; got %s\",\n      COMMAND_MERGE,\n      nextValue\n    );\n    _assign(nextValue, spec[COMMAND_MERGE]);\n  }\n\n  if (hasOwnProperty.call(spec, COMMAND_PUSH)) {\n    invariantArrayCase(value, spec, COMMAND_PUSH);\n    spec[COMMAND_PUSH].forEach(function(item) {\n      nextValue.push(item);\n    });\n  }\n\n  if (hasOwnProperty.call(spec, COMMAND_UNSHIFT)) {\n    invariantArrayCase(value, spec, COMMAND_UNSHIFT);\n    spec[COMMAND_UNSHIFT].forEach(function(item) {\n      nextValue.unshift(item);\n    });\n  }\n\n  if (hasOwnProperty.call(spec, COMMAND_SPLICE)) {\n    invariant(\n      Array.isArray(value),\n      'Expected %s target to be an array; got %s',\n      COMMAND_SPLICE,\n      value\n    );\n    invariant(\n      Array.isArray(spec[COMMAND_SPLICE]),\n      'update(): expected spec of %s to be an array of arrays; got %s. ' +\n        'Did you forget to wrap your parameters in an array?',\n      COMMAND_SPLICE,\n      spec[COMMAND_SPLICE]\n    );\n    spec[COMMAND_SPLICE].forEach(function(args) {\n      invariant(\n        Array.isArray(args),\n        'update(): expected spec of %s to be an array of arrays; got %s. ' +\n          'Did you forget to wrap your parameters in an array?',\n        COMMAND_SPLICE,\n        spec[COMMAND_SPLICE]\n      );\n      nextValue.splice.apply(nextValue, args);\n    });\n  }\n\n  if (hasOwnProperty.call(spec, COMMAND_APPLY)) {\n    invariant(\n      typeof spec[COMMAND_APPLY] === 'function',\n      'update(): expected spec of %s to be a function; got %s.',\n      COMMAND_APPLY,\n      spec[COMMAND_APPLY]\n    );\n    nextValue = spec[COMMAND_APPLY](nextValue);\n  }\n\n  for (var k in spec) {\n    if (!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])) {\n      nextValue[k] = update(value[k], spec[k]);\n    }\n  }\n\n  return nextValue;\n}\n\nmodule.exports = update;\n", "export const objectType = (obj: unknown) => {\n  return Object.prototype.toString.call(obj).slice(8, -1);\n};\nexport const isDefined = (param: unknown) => typeof param !== \"undefined\";\nexport const isUndefined = (param: unknown) => typeof param === \"undefined\";\nexport const isFunction = (param: unknown) => typeof param === \"function\";\nexport const isNumber = (param: unknown) => typeof param === \"number\" && !isNaN(param);\nexport const isString = (param: unknown) => objectType(param) === \"String\";\nexport const isArray = (param: unknown) => objectType(param) === \"Array\";\n\n// closest(e.target, '.field')\nexport const closest = (target: Element | null, selector: string) => {\n  while (target) {\n    if (target.matches && target.matches(selector)) return target;\n    target = target.parentNode as Element;\n  }\n  return null;\n};\n\nexport const getOffsetRect = (elem: Element) => {\n  // (1)\n  const box = elem.getBoundingClientRect();\n  const body = document.body;\n  const docElem = document.documentElement;\n\n  // (2)\n  const scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n  const scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n\n  // (3)\n  const clientTop = docElem.clientTop || body.clientTop || 0;\n  const clientLeft = docElem.clientLeft || body.clientLeft || 0;\n\n  // (4)\n  const top = box.top + scrollTop - clientTop;\n  const left = box.left + scrollLeft - clientLeft;\n\n  return { top: Math.round(top), left: Math.round(left) };\n};\n\nexport const getTotalScroll = (elem: Element) => {\n  let top = 0;\n  let left = 0;\n\n  while ((elem = elem.parentNode as Element)) {\n    top += elem.scrollTop || 0;\n    left += elem.scrollLeft || 0;\n  }\n\n  return { top, left };\n};\n\nexport const getTransformProps = (x: number, y: number) => {\n  return {\n    transform: `translate(${x}px, ${y}px)`,\n  };\n};\n\nexport const listWithChildren = <T extends Record<string, unknown>>(\n  list: T[],\n  childrenProp: string,\n): T[] => {\n  return list.map(item => {\n    return {\n      ...item,\n      [childrenProp]: item[childrenProp]\n        ? listWithChildren(item[childrenProp] as T[], childrenProp)\n        : []\n    };\n  });\n};\n\nexport const getAllNonEmptyNodesIds = <T extends Record<string, unknown>>(\n  items: T[],\n  { idProp, childrenProp }: { idProp: string, childrenProp: string },\n) => {\n  let childrenIds: unknown[] = [];\n  let ids = items\n    .filter(item => (item[childrenProp] as T[])?.length)\n    .map(item => {\n      childrenIds = childrenIds.concat(\n        getAllNonEmptyNodesIds(\n          item[childrenProp] as T[],\n          { idProp, childrenProp }\n        )\n      );\n      return item[idProp];\n    });\n\n  return ids.concat(childrenIds);\n};\n", "import React, { PureComponent } from 'react';\nimport cx from 'classnames';\n\nimport { IconProps } from '../types';\n\nclass Icon extends PureComponent<IconProps> {\n  render() {\n    const { children, className, isCollapsed, ...props } = this.props;\n    const finalClassName = cx('nestable-icon', className, {\n      'nestable-icon--plus-gray': isCollapsed,\n      'nestable-icon--minus-gray': !isCollapsed,\n    });\n\n    return (\n      <i className={finalClassName} {...props} />\n    );\n  }\n}\n\nexport default Icon;\n", "import Icon from './Icon';\n\nexport default Icon;", "import React, { PureComponent } from 'react';\nimport cx from 'classnames';\n\nimport Icon from '../Icon';\nimport { NestableItemProps, NestableItemOptions, Item } from '../types';\n\nclass NestableItem extends PureComponent<NestableItemProps> {\n  static defaultProps: Partial<NestableItemProps> = {\n    depth: 0,\n  };\n\n  renderCollapseIcon: NestableItemOptions['renderCollapseIcon'] = ({ isCollapsed }) => (\n    <Icon\n      className=\"nestable-item-icon\"\n      isCollapsed={isCollapsed}\n    />\n  );\n\n  onMouseEnter = (e: MouseEvent) => {\n    const { item, options } = this.props;\n\n    return options.onMouseEnter(e, item);\n  };\n\n  onDragStart = (e: MouseEvent) => {\n    const { item, options } = this.props;\n\n    return options.onDragStart(e, item);\n  };\n\n  render() {\n    const { item, isCopy, options, index, depth } = this.props;\n    const {\n      dragItem,\n      renderItem,\n      handler,\n      disableCollapse,\n      disableDrag,\n      idProp,\n      childrenProp,\n      checkIfCollapsed,\n      renderCollapseIcon = this.renderCollapseIcon,\n    } = options;\n\n    const isCollapsed = checkIfCollapsed(item);\n    const isDragging = !isCopy && dragItem && dragItem[idProp] === item[idProp];\n    const hasChildren = item[childrenProp] && item[childrenProp].length > 0;\n    let isDraggable = true;\n\n    let rowProps = {};\n    let handlerProps = {};\n    let wrappedHandler;\n\n    if (!isCopy) {\n      if (dragItem) {\n        rowProps = {\n          ...rowProps,\n          onMouseEnter: this.onMouseEnter,\n        };\n      } else {\n        if (typeof disableDrag === 'function') {\n          isDraggable = disableDrag({ item, index, depth });\n        } else if (typeof disableDrag !== 'undefined') {\n          isDraggable = !disableDrag;\n        }\n\n        if (isDraggable) {\n          handlerProps = {\n            ...handlerProps,\n            draggable: true,\n            onDragStart: this.onDragStart,\n          };\n        }\n      }\n    }\n\n    if (handler) {\n      wrappedHandler = <span className=\"nestable-item-handler\" {...handlerProps}>{handler}</span>;\n      // wrappedHandler = React.cloneElement(handler, handlerProps);\n    } else {\n      rowProps = {\n        ...rowProps,\n        ...handlerProps,\n      };\n    }\n\n    const handleCollapseIconClick = disableCollapse\n      ? undefined :\n      () => options.onToggleCollapse(item);\n\n    const collapseIcon = hasChildren\n      ? (\n        <span onClick={handleCollapseIconClick}>\n          {renderCollapseIcon({ isCollapsed, item })}\n        </span>\n      )\n      : null;\n\n    const baseClassName = `nestable-item${isCopy ? '-copy' : ''}`;\n    const itemProps = {\n      className: cx(\n          baseClassName,\n          `${baseClassName}-${item[idProp]}`,\n          {\n            'is-dragging': isDragging,\n            [`${baseClassName}--with-children`]: hasChildren,\n            [`${baseClassName}--children-open`]: hasChildren && !isCollapsed,\n            [`${baseClassName}--children-collapsed`]: hasChildren && isCollapsed,\n            [`${baseClassName}--children-no-collapse`]: hasChildren && disableCollapse,\n          },\n      ),\n    };\n\n    const content = renderItem({\n      collapseIcon,\n      depth,\n      handler: wrappedHandler,\n      index,\n      isDraggable,\n      item,\n    });\n\n    if (!content) return null;\n\n    return (\n      <li {...itemProps}>\n        <div className=\"nestable-item-name\" {...rowProps}>\n          {content}\n        </div>\n\n        {hasChildren && !isCollapsed && (\n          <ol className=\"nestable-list\">\n            {(item[childrenProp] as Item[]).map((item, i) => {\n              return (\n                <NestableItem\n                  key={i}\n                  index={i}\n                  depth={depth + 1}\n                  item={item}\n                  options={options}\n                  isCopy={isCopy}\n                />\n              );\n            })}\n          </ol>\n        )}\n      </li>\n    );\n  }\n}\n\nexport default NestableItem;\n", "import React, { Component, CSSProperties, UpdateSpec, UpdateSpecPath } from 'react';\nimport shallowCompare from 'react-addons-shallow-compare';\nimport update from 'react-addons-update';\nimport cx from 'classnames';\n\nimport {\n  isArray,\n  closest,\n  getOffsetRect,\n  getTotalScroll,\n  getTransformProps,\n  listWithChildren,\n  getAllNonEmptyNodesIds,\n} from '../utils';\nimport { NestableProps, NestableState, NestableItemOptions, Item, Collapse } from '../types';\n\nimport NestableItem from './NestableItem';\n\nclass Nestable extends Component<NestableProps, NestableState> {\n  el: Element | null = null;\n  elCopyStyles: CSSProperties | null = null;\n  mouse = {\n    last: { x: 0 },\n    shift: { x: 0 },\n  };\n\n  constructor(props: NestableProps) {\n    super(props);\n    this.state = {\n      items: [],\n      itemsOld: null,\n      dragItem: null,\n      isDirty: false,\n      collapsedItems: [],\n    };\n  }\n\n  static defaultProps: Partial<NestableProps> = {\n    childrenProp: 'children',\n    collapsed: false,\n    confirmChange: () => true,\n    disableCollapse: false,\n    disableDrag: false,\n    group: Math.random().toString(36).slice(2),\n    idProp: 'id',\n    items: [],\n    maxDepth: 10,\n    onChange: () => {},\n    onCollapseChange: () => {},\n    onDragEnd: () => {},\n    onDragStart: () => {},\n    renderItem: ({ item }) => String(item),\n    threshold: 30,\n  };\n\n  componentDidMount() {\n    let { items, childrenProp } = this.props;\n\n    // make sure every item has property 'children'\n    items = listWithChildren(items, childrenProp);\n\n    this.setState({ items });\n  }\n\n  componentDidUpdate(prevProps: NestableProps){\n    const { props: { items: itemsNew, childrenProp }, state } = this;\n    const isPropsChanged = shallowCompare({ ...this, props: prevProps, state }, this.props, state);\n\n    if (isPropsChanged) {\n      this.stopTrackMouse();\n\n      this.setState(prevState => {\n        const newState: NestableState = {\n          ...prevState,\n          items: listWithChildren(itemsNew, childrenProp),\n          dragItem: null,\n          isDirty: false,\n        };\n\n        if (prevProps.collapsed !== this.props.collapsed) {\n          newState.collapsedItems = [];\n          this.onCollapseChange(newState.collapsedItems);\n        }\n\n        return newState;\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopTrackMouse();\n  }\n\n  // ––––––––––––––––––––––––––––––––––––\n  // Public Methods\n  // ––––––––––––––––––––––––––––––––––––\n  collapse: Collapse = (itemIds) => {\n    const { idProp, childrenProp, collapsed } = this.props;\n    const { items } = this.state;\n\n    if (itemIds === 'NONE') {\n      this.setState({\n        collapsedItems: collapsed\n          ? getAllNonEmptyNodesIds(items, {idProp, childrenProp})\n          : [],\n      });\n\n    } else if (itemIds === 'ALL') {\n      this.setState({\n        collapsedItems: collapsed\n          ? []\n          : getAllNonEmptyNodesIds(items, {idProp, childrenProp}),\n      });\n\n    } else if (isArray(itemIds)) {\n      this.setState({\n        collapsedItems: getAllNonEmptyNodesIds(items, {idProp, childrenProp})\n          .filter(id => (itemIds.indexOf(id) > -1) !== collapsed),\n      });\n    }\n  };\n\n  // ––––––––––––––––––––––––––––––––––––\n  // Methods\n  // ––––––––––––––––––––––––––––––––––––\n  startTrackMouse = () => {\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onDragEnd);\n    document.addEventListener('keydown', this.onKeyDown);\n  };\n\n  stopTrackMouse = () => {\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onDragEnd);\n    document.removeEventListener('keydown', this.onKeyDown);\n    this.elCopyStyles = null;\n  };\n\n  moveItem(\n    { dragItem, pathFrom, pathTo }: { dragItem: Item, pathFrom: number[], pathTo: number[] },\n    extraProps: Partial<NestableState> = {},\n  ) {\n    const { childrenProp, confirmChange } = this.props;\n    const dragItemSize = this.getItemDepth(dragItem);\n    let { items } = this.state;\n\n    // the remove action might affect the next position,\n    // so update next coordinates accordingly\n    const realPathTo = this.getRealNextPath(pathFrom, pathTo, dragItemSize);\n\n    if (realPathTo.length === 0) return;\n\n    // user can validate every movement\n    const destinationPath = realPathTo.length > pathTo.length\n      ? pathTo\n      : pathTo.slice(0, -1);\n    const destinationParent = this.getItemByPath(destinationPath);\n    if (!confirmChange({dragItem, destinationParent})) return;\n\n    const removePath = this.getSplicePath(pathFrom, {\n      numToRemove: 1,\n      childrenProp,\n    });\n\n    const insertPath = this.getSplicePath(realPathTo, {\n      numToRemove: 0,\n      itemsToInsert: [dragItem],\n      childrenProp,\n    });\n\n    items = update(items, removePath);\n    items = update(items, insertPath);\n\n    this.setState(prevState => ({\n      ...prevState,\n      items,\n      isDirty: true,\n      ...extraProps\n    }));\n\n    if (extraProps.collapsedItems !== this.state.collapsedItems) {\n      this.onCollapseChange(extraProps.collapsedItems);\n    }\n  }\n\n  tryIncreaseDepth(dragItem: Item) {\n    const { maxDepth, idProp, childrenProp, collapsed } = this.props;\n    const pathFrom = this.getPathById(dragItem[idProp]);\n    const itemIndex = pathFrom[pathFrom.length - 1];\n    const newDepth = pathFrom.length + this.getItemDepth(dragItem);\n\n    // has previous sibling and isn't at max depth\n    if (itemIndex > 0 && newDepth <= maxDepth) {\n      const prevSibling = this.getItemByPath(pathFrom.slice(0, -1).concat(itemIndex - 1));\n\n      // previous sibling is not collapsed\n      if (!prevSibling[childrenProp].length || !this.checkIfCollapsed(prevSibling)) {\n        const pathTo = pathFrom\n          .slice(0, -1)\n          .concat(itemIndex - 1)\n          .concat(prevSibling[childrenProp].length);\n\n        // if collapsed by default\n        // and was no children here\n        // open this node\n        let collapseProps = {};\n        if (collapsed && !prevSibling[childrenProp].length) {\n          collapseProps = this.onToggleCollapse(prevSibling, true);\n        }\n\n        this.moveItem({ dragItem, pathFrom, pathTo }, collapseProps);\n      }\n    }\n  }\n\n  tryDecreaseDepth(dragItem: Item) {\n    const { idProp, childrenProp, collapsed } = this.props;\n    const pathFrom = this.getPathById(dragItem[idProp]);\n    const itemIndex = pathFrom[pathFrom.length - 1];\n\n    // has parent\n    if (pathFrom.length > 1) {\n      const parent = this.getItemByPath(pathFrom.slice(0, -1));\n\n      // is last (by order) item in array\n      if (itemIndex + 1 === parent[childrenProp].length) {\n        let pathTo = pathFrom.slice(0, -1);\n        pathTo[pathTo.length - 1] += 1;\n\n        // if collapsed by default\n        // and is last (by count) item in array\n        // remove this node from list of open nodes\n        let collapseProps = {};\n        if (collapsed && parent[childrenProp].length === 1) {\n          collapseProps = this.onToggleCollapse(parent, true);\n        }\n\n        this.moveItem({ dragItem, pathFrom, pathTo }, collapseProps);\n      }\n    }\n  }\n\n  dragApply() {\n    const { onChange, idProp } = this.props;\n    const { items, isDirty, dragItem } = this.state;\n\n    this.setState({\n      itemsOld: null,\n      dragItem: null,\n      isDirty: false,\n    });\n\n    if (onChange && isDirty) {\n      const targetPath = this.getPathById(dragItem[idProp], items)\n      onChange({items, dragItem, targetPath});\n    }\n  }\n\n  dragRevert() {\n    const { itemsOld } = this.state;\n\n    this.setState({\n      items: itemsOld,\n      itemsOld: null,\n      dragItem: null,\n      isDirty: false,\n    });\n  }\n\n  // ––––––––––––––––––––––––––––––––––––\n  // Getter methods\n  // ––––––––––––––––––––––––––––––––––––\n  getPathById(id: unknown, items = this.state.items) {\n    const { idProp, childrenProp } = this.props;\n    let path: number[] = [];\n\n    items.every((item, i) => {\n      if (item[idProp] === id) {\n        path.push(i);\n      } else if (item[childrenProp]) {\n        const childrenPath = this.getPathById(id, item[childrenProp]);\n\n        if (childrenPath.length) {\n          path = path.concat(i).concat(childrenPath);\n        }\n      }\n\n      return path.length === 0;\n    });\n\n    return path;\n  }\n\n  getItemByPath(path: number[], items = this.state.items) {\n    const { childrenProp } = this.props;\n    let item: Item | null = null;\n\n    path.forEach(index => {\n      const list = item ? item[childrenProp] : items;\n      item = list[index];\n    });\n\n    return item;\n  }\n\n  getItemDepth = (item: Item) => {\n    const { childrenProp } = this.props;\n    let level = 1;\n\n    if (item[childrenProp].length > 0) {\n      const childrenDepths = item[childrenProp].map(this.getItemDepth);\n      level += Math.max(...childrenDepths);\n    }\n\n    return level;\n  };\n\n  getSplicePath(\n    path: number[],\n    options: {\n      numToRemove?: number;\n      itemsToInsert?: Item[];\n      childrenProp?: NestableProps['childrenProp'];\n    } = {},\n  ) {\n    const splicePath: UpdateSpecPath = {};\n    const numToRemove = options.numToRemove || 0;\n    const itemsToInsert = options.itemsToInsert || [];\n    const lastIndex = path.length - 1;\n    let currentPath = splicePath;\n\n    path.forEach((index, i) => {\n      if (i === lastIndex) {\n        currentPath.$splice = [[index, numToRemove, ...itemsToInsert]] as UpdateSpec;\n      } else {\n        const nextPath = {};\n        currentPath[index] = { [options.childrenProp]: nextPath };\n        currentPath = nextPath;\n      }\n    });\n\n    return splicePath;\n  }\n\n  getRealNextPath(prevPath: number[], nextPath: number[], dragItemSize: number): number[] {\n    const { childrenProp, maxDepth } = this.props;\n    const ppLastIndex = prevPath.length - 1;\n    const npLastIndex = nextPath.length - 1;\n    const newDepth = nextPath.length + dragItemSize - 1;\n\n    if (prevPath.length < nextPath.length) {\n      // move into depth\n      let wasShifted = false;\n\n      // if new depth exceeds max, try to put after item instead of into item\n      if (newDepth > maxDepth && nextPath.length) {\n        return this.getRealNextPath(prevPath, nextPath.slice(0, -1), dragItemSize);\n      }\n\n      return nextPath.map((nextIndex, i) => {\n        if (wasShifted) {\n          return i === npLastIndex\n            ? nextIndex + 1\n            : nextIndex;\n        }\n\n        if (typeof prevPath[i] !== 'number') {\n          return nextIndex;\n        }\n\n        if (nextPath[i] > prevPath[i] && i === ppLastIndex) {\n          wasShifted = true;\n          return nextIndex - 1;\n        }\n\n        return nextIndex;\n      });\n\n    } else if (prevPath.length === nextPath.length) {\n      // if move bottom + move to item with children --> make it a first child instead of swap\n      if (nextPath[npLastIndex] > prevPath[npLastIndex]) {\n        const target = this.getItemByPath(nextPath);\n\n        if (\n            newDepth < maxDepth &&\n            target[childrenProp] &&\n            target[childrenProp].length &&\n            !this.checkIfCollapsed(target)\n        ) {\n          return nextPath\n            .slice(0, -1)\n            .concat(nextPath[npLastIndex] - 1)\n            .concat(0);\n        }\n      }\n    }\n\n    return nextPath;\n  }\n\n  getItemOptions(): NestableItemOptions {\n    const {\n      renderItem,\n      renderCollapseIcon,\n      handler,\n      disableCollapse,\n      disableDrag,\n      idProp,\n      childrenProp,\n    } = this.props;\n    const { dragItem } = this.state;\n\n    return {\n      dragItem,\n      idProp,\n      childrenProp,\n      disableCollapse,\n      disableDrag,\n      renderItem,\n      renderCollapseIcon,\n      handler,\n\n      checkIfCollapsed: this.checkIfCollapsed,\n      onDragStart: this.onDragStart,\n      onMouseEnter: this.onMouseEnter,\n      onToggleCollapse: this.onToggleCollapse,\n    };\n  }\n\n  checkIfCollapsed = (item: Item) => {\n    const { collapsed, idProp } = this.props;\n    const { collapsedItems } = this.state;\n\n    return !!((collapsedItems.indexOf(item[idProp]) > -1) !== collapsed);\n  };\n\n  // ––––––––––––––––––––––––––––––––––––\n  // Click handlers or event handlers\n  // ––––––––––––––––––––––––––––––––––––\n  onDragStart = (e: MouseEvent, item: Item) => {\n    const { onDragStart } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!(e.target instanceof Element)) return;\n\n    this.el = closest(e.target, '.nestable-item');\n\n    this.startTrackMouse();\n    this.onMouseMove(e);\n    onDragStart({dragItem: item});\n\n    this.setState({\n      dragItem: item,\n      itemsOld: this.state.items,\n    });\n  };\n\n  onDragEnd = (e: MouseEvent | null, isCancel?: boolean) => {\n    const { onDragEnd } = this.props;\n\n    e?.preventDefault();\n\n    this.stopTrackMouse();\n    this.el = null;\n    onDragEnd();\n\n    isCancel\n      ? this.dragRevert()\n      : this.dragApply();\n  };\n\n  onMouseMove = (e: MouseEvent) => {\n    const { group, threshold } = this.props;\n    const { dragItem } = this.state;\n    const { clientX, clientY } = e;\n    const transformProps = getTransformProps(clientX, clientY);\n    const elCopy = document.querySelector<HTMLElement>(`.nestable-${group} .nestable-drag-layer > .nestable-list`);\n\n    if (!this.elCopyStyles) {\n      const offset = getOffsetRect(this.el);\n      const scroll = getTotalScroll(this.el);\n\n      this.elCopyStyles = {\n        marginTop: offset.top - clientY - scroll.top,\n        marginLeft: offset.left - clientX - scroll.left,\n        ...transformProps\n      };\n\n    } else {\n      this.elCopyStyles = {\n        ...this.elCopyStyles,\n        ...transformProps\n      };\n      Object.keys(transformProps).forEach((key: keyof typeof transformProps) => {\n        elCopy.style[key] = transformProps[key];\n      });\n\n      const diffX = clientX - this.mouse.last.x;\n      if (\n        (diffX >= 0 && this.mouse.shift.x >= 0) ||\n        (diffX <= 0 && this.mouse.shift.x <= 0)\n      ) {\n        this.mouse.shift.x += diffX;\n      } else {\n        this.mouse.shift.x = 0;\n      }\n      this.mouse.last.x = clientX;\n\n      if (Math.abs(this.mouse.shift.x) > threshold) {\n        if (this.mouse.shift.x > 0) {\n          this.tryIncreaseDepth(dragItem);\n        } else {\n          this.tryDecreaseDepth(dragItem);\n        }\n\n        this.mouse.shift.x = 0;\n      }\n    }\n  };\n\n  onMouseEnter = (e: MouseEvent, item: Item) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const { collapsed, idProp, childrenProp } = this.props;\n    const { dragItem } = this.state;\n    if (dragItem[idProp] === item[idProp]) return;\n\n    const pathFrom = this.getPathById(dragItem[idProp]);\n    const pathTo = this.getPathById(item[idProp]);\n\n    // if collapsed by default\n    // and move out the only child\n    // remove parent node from list of open nodes\n    let collapseProps = {};\n    if (collapsed && pathFrom.length > 1) {\n      const parent = this.getItemByPath(pathFrom.slice(0, -1));\n      if (parent[childrenProp].length === 1) {\n        collapseProps = this.onToggleCollapse(parent, true);\n      }\n    }\n\n    this.moveItem({ dragItem, pathFrom, pathTo }, collapseProps);\n  };\n\n  onToggleCollapse = (item: Item, isGetter?: true) => {\n    const { collapsed, idProp } = this.props;\n    const { collapsedItems } = this.state;\n    const isCollapsed = this.checkIfCollapsed(item);\n\n    const newState = {\n      collapsedItems: (isCollapsed !== collapsed)\n        ? collapsedItems.filter(id => id !== item[idProp])\n        : collapsedItems.concat(item[idProp]),\n    };\n\n    if (isGetter) {\n      return newState;\n    } else {\n      this.setState(newState);\n      this.onCollapseChange(newState.collapsedItems);\n    }\n  };\n\n  onCollapseChange = (ids: NestableState['collapsedItems']) => {\n    const { collapsed, onCollapseChange } = this.props;\n\n    onCollapseChange(collapsed ? { openIds: ids } : { closedIds: ids });\n  };\n\n  onKeyDown = (e: KeyboardEvent) => {\n    if (e.which === 27) {\n      // ESC\n      this.onDragEnd(null, true);\n    }\n  };\n\n  // ––––––––––––––––––––––––––––––––––––\n  // Render methods\n  // ––––––––––––––––––––––––––––––––––––\n  renderDragLayer() {\n    const { group, idProp } = this.props;\n    const { dragItem } = this.state;\n    const el = document.querySelector(`.nestable-${group} .nestable-item-${dragItem[idProp]}`);\n\n    let listStyles: CSSProperties = {};\n    if (el) {\n      listStyles.width = el.clientWidth;\n    }\n    if (this.elCopyStyles) {\n      listStyles = {\n        ...listStyles,\n        ...this.elCopyStyles\n      };\n    }\n\n    const options = this.getItemOptions();\n\n    return (\n      <div className=\"nestable-drag-layer\">\n        <ol className=\"nestable-list\" style={listStyles}>\n          <NestableItem\n            item={dragItem}\n            options={options}\n            isCopy\n          />\n        </ol>\n      </div>\n    );\n  }\n\n  render() {\n    const { group, className, idProp } = this.props;\n    const { items, dragItem } = this.state;\n    const options = this.getItemOptions();\n\n    return (\n      <div className={cx(className, 'nestable', `nestable-${group}`, { 'is-drag-active': dragItem })}>\n        <ol className=\"nestable-list\">\n          {items.map((item, i) => {\n            return (\n              <NestableItem\n                key={item[idProp]}\n                index={i}\n                item={item}\n                options={options}\n              />\n            );\n          })}\n        </ol>\n\n        {dragItem && this.renderDragLayer()}\n      </div>\n    );\n  }\n}\n\nexport default Nestable;\n", "import Nestable from './Nestable';\n\nexport default Nestable;", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "import Nestable from './Nestable';\n\nexport * from './types';\nexport default Nestable;\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAWA,QAAI,iBAAiB,OAAO,UAAU;AAMtC,aAAS,GAAG,GAAG,GAAG;AAEhB,UAAI,MAAM,GAAG;AAIX,eAAO,MAAM,KAAK,MAAM,KAAK,IAAI,MAAM,IAAI;AAAA,MAC7C,OAAO;AAEL,eAAO,MAAM,KAAK,MAAM;AAAA,MAC1B;AAAA,IACF;AAOA,aAAS,aAAa,MAAM,MAAM;AAChC,UAAI,GAAG,MAAM,IAAI,GAAG;AAClB,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,SAAS,YAAY,SAAS,QAAQ,OAAO,SAAS,YAAY,SAAS,MAAM;AAC1F,eAAO;AAAA,MACT;AAEA,UAAI,QAAQ,OAAO,KAAK,IAAI;AAC5B,UAAI,QAAQ,OAAO,KAAK,IAAI;AAE5B,UAAI,MAAM,WAAW,MAAM,QAAQ;AACjC,eAAO;AAAA,MACT;AAGA,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAI,CAAC,eAAe,KAAK,MAAM,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG;AAC/E,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAOA,aAAS,eAAe,UAAU,WAAW,WAAW;AACtD,aACE,CAAC,aAAa,SAAS,OAAO,SAAS,KACvC,CAAC,aAAa,SAAS,OAAO,SAAS;AAAA,IAE3C;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACzEjB;AAAA;AAAA;AASA,QAAI,UAAU;AACd,QAAI,iBAAiB,CAAC,EAAE;AAExB,QAAI,iBAAiB,SAASA,gBAAe,QAAQ;AAAA,IAAC;AAEtD,QAAI,MAAuC;AACzC,uBAAiB,SAASA,gBAAe,QAAQ;AAC/C,YAAI,WAAW,QAAW;AACxB,gBAAM,IAAI,MAAM,8CAA8C;AAAA,QAChE;AAAA,MACF;AAAA,IACF;AAEA,aAAS,UAAU,WAAW,QAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AACtD,qBAAe,MAAM;AAErB,UAAI,CAAC,WAAW;AACd,YAAI;AACJ,YAAI,WAAW,QAAW;AACxB,kBAAQ,IAAI,MAAM,+HAAoI;AAAA,QACxJ,OAAO;AACL,cAAI,OAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC5B,cAAI,WAAW;AACf,kBAAQ,IAAI,MAAM,OAAO,QAAQ,OAAO,WAAY;AAClD,mBAAO,KAAK,UAAU;AAAA,UACxB,CAAC,CAAC;AACF,gBAAM,OAAO;AAAA,QACf;AAEA,cAAM,cAAc;AACpB,cAAM;AAAA,MACR;AAAA,IACF;AAEA,aAAS,YAAY,GAAG;AACtB,UAAI,MAAM,QAAQ,CAAC,GAAG;AACpB,eAAO,EAAE,OAAO;AAAA,MAClB,WAAW,KAAK,OAAO,MAAM,UAAU;AACrC,eAAO,QAAQ,IAAI,EAAE,YAAY,GAAG,CAAC;AAAA,MACvC,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF;AAEA,QAAI,eAAe;AACnB,QAAI,kBAAkB;AACtB,QAAI,iBAAiB;AACrB,QAAI,cAAc;AAClB,QAAI,gBAAgB;AACpB,QAAI,gBAAgB;AAEpB,QAAI,oBAAoB;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,QAAI,mBAAmB,CAAC;AAExB,sBAAkB,QAAQ,SAAS,SAAS;AAC1C,uBAAiB,OAAO,IAAI;AAAA,IAC9B,CAAC;AAED,aAAS,mBAAmB,OAAO,MAAM,SAAS;AAChD;AAAA,QACE,MAAM,QAAQ,KAAK;AAAA,QACnB;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,UAAI,YAAY,KAAK,OAAO;AAC5B;AAAA,QACE,MAAM,QAAQ,SAAS;AAAA,QACvB;AAAA,QAEA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAMA,aAAS,OAAO,OAAO,MAAM;AAC3B;AAAA,QACE,OAAO,SAAS;AAAA,QAChB;AAAA,QAEA,kBAAkB,KAAK,IAAI;AAAA,QAC3B;AAAA,MACF;AAEA,UAAI,eAAe,KAAK,MAAM,WAAW,GAAG;AAC1C;AAAA,UACE,OAAO,KAAK,IAAI,EAAE,WAAW;AAAA,UAC7B;AAAA,UACA;AAAA,QACF;AAEA,eAAO,KAAK,WAAW;AAAA,MACzB;AAEA,UAAI,YAAY,YAAY,KAAK;AAEjC,UAAI,eAAe,KAAK,MAAM,aAAa,GAAG;AAC5C,YAAI,WAAW,KAAK,aAAa;AACjC;AAAA,UACE,YAAY,OAAO,aAAa;AAAA,UAChC;AAAA,UACA;AAAA,UACA;AAAA,QACF;AACA;AAAA,UACE,aAAa,OAAO,cAAc;AAAA,UAClC;AAAA,UACA;AAAA,UACA;AAAA,QACF;AACA,gBAAQ,WAAW,KAAK,aAAa,CAAC;AAAA,MACxC;AAEA,UAAI,eAAe,KAAK,MAAM,YAAY,GAAG;AAC3C,2BAAmB,OAAO,MAAM,YAAY;AAC5C,aAAK,YAAY,EAAE,QAAQ,SAAS,MAAM;AACxC,oBAAU,KAAK,IAAI;AAAA,QACrB,CAAC;AAAA,MACH;AAEA,UAAI,eAAe,KAAK,MAAM,eAAe,GAAG;AAC9C,2BAAmB,OAAO,MAAM,eAAe;AAC/C,aAAK,eAAe,EAAE,QAAQ,SAAS,MAAM;AAC3C,oBAAU,QAAQ,IAAI;AAAA,QACxB,CAAC;AAAA,MACH;AAEA,UAAI,eAAe,KAAK,MAAM,cAAc,GAAG;AAC7C;AAAA,UACE,MAAM,QAAQ,KAAK;AAAA,UACnB;AAAA,UACA;AAAA,UACA;AAAA,QACF;AACA;AAAA,UACE,MAAM,QAAQ,KAAK,cAAc,CAAC;AAAA,UAClC;AAAA,UAEA;AAAA,UACA,KAAK,cAAc;AAAA,QACrB;AACA,aAAK,cAAc,EAAE,QAAQ,SAAS,MAAM;AAC1C;AAAA,YACE,MAAM,QAAQ,IAAI;AAAA,YAClB;AAAA,YAEA;AAAA,YACA,KAAK,cAAc;AAAA,UACrB;AACA,oBAAU,OAAO,MAAM,WAAW,IAAI;AAAA,QACxC,CAAC;AAAA,MACH;AAEA,UAAI,eAAe,KAAK,MAAM,aAAa,GAAG;AAC5C;AAAA,UACE,OAAO,KAAK,aAAa,MAAM;AAAA,UAC/B;AAAA,UACA;AAAA,UACA,KAAK,aAAa;AAAA,QACpB;AACA,oBAAY,KAAK,aAAa,EAAE,SAAS;AAAA,MAC3C;AAEA,eAAS,KAAK,MAAM;AAClB,YAAI,EAAE,iBAAiB,eAAe,CAAC,KAAK,iBAAiB,CAAC,IAAI;AAChE,oBAAU,CAAC,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACjMV,QAAM,aAAa,SAAC,KAAY;AACrC,aAAO,OAAO,UAAU,SAAS,KAAK,GAAG,EAAE,MAAM,GAAG,EAAE;IACxD;AAFa,YAAA,aAAU;AAGhB,QAAM,YAAY,SAAC,OAAc;AAAK,aAAA,OAAO,UAAU;IAAjB;AAAhC,YAAA,YAAS;AACf,QAAM,cAAc,SAAC,OAAc;AAAK,aAAA,OAAO,UAAU;IAAjB;AAAlC,YAAA,cAAW;AACjB,QAAM,aAAa,SAAC,OAAc;AAAK,aAAA,OAAO,UAAU;IAAjB;AAAjC,YAAA,aAAU;AAChB,QAAM,WAAW,SAAC,OAAc;AAAK,aAAA,OAAO,UAAU,YAAY,CAAC,MAAM,KAAK;IAAzC;AAA/B,YAAA,WAAQ;AACd,QAAM,WAAW,SAAC,OAAc;AAAK,cAAA,GAAA,QAAA,YAAW,KAAK,MAAM;IAAtB;AAA/B,YAAA,WAAQ;AACd,QAAM,UAAU,SAAC,OAAc;AAAK,cAAA,GAAA,QAAA,YAAW,KAAK,MAAM;IAAtB;AAA9B,YAAA,UAAO;AAGb,QAAM,UAAU,SAAC,QAAwB,UAAgB;AAC9D,aAAO,QAAQ;AACb,YAAI,OAAO,WAAW,OAAO,QAAQ,QAAQ;AAAG,iBAAO;AACvD,iBAAS,OAAO;;AAElB,aAAO;IACT;AANa,YAAA,UAAO;AAQb,QAAM,gBAAgB,SAAC,MAAa;AAEzC,UAAM,MAAM,KAAK,sBAAqB;AACtC,UAAM,OAAO,SAAS;AACtB,UAAM,UAAU,SAAS;AAGzB,UAAM,YAAY,OAAO,eAAe,QAAQ,aAAa,KAAK;AAClE,UAAM,aAAa,OAAO,eAAe,QAAQ,cAAc,KAAK;AAGpE,UAAM,YAAY,QAAQ,aAAa,KAAK,aAAa;AACzD,UAAM,aAAa,QAAQ,cAAc,KAAK,cAAc;AAG5D,UAAM,MAAM,IAAI,MAAM,YAAY;AAClC,UAAM,OAAO,IAAI,OAAO,aAAa;AAErC,aAAO,EAAE,KAAK,KAAK,MAAM,GAAG,GAAG,MAAM,KAAK,MAAM,IAAI,EAAC;IACvD;AAnBa,YAAA,gBAAa;AAqBnB,QAAM,iBAAiB,SAAC,MAAa;AAC1C,UAAI,MAAM;AACV,UAAI,OAAO;AAEX,aAAQ,OAAO,KAAK,YAAwB;AAC1C,eAAO,KAAK,aAAa;AACzB,gBAAQ,KAAK,cAAc;;AAG7B,aAAO,EAAE,KAAK,KAAI;IACpB;AAVa,YAAA,iBAAc;AAYpB,QAAM,oBAAoB,SAAC,GAAW,GAAS;AACpD,aAAO;QACL,WAAW,aAAA,OAAa,GAAC,MAAA,EAAA,OAAO,GAAC,KAAA;;IAErC;AAJa,YAAA,oBAAiB;AAMvB,QAAM,mBAAmB,SAC9B,MACA,cAAoB;AAEpB,aAAO,KAAK,IAAI,SAAA,MAAI;;AAClB,eAAA,SAAA,SAAA,CAAA,GACK,IAAI,IAAA,KAAA,CAAA,GAAA,GACN,YAAY,IAAG,KAAK,YAAY,KAC7B,GAAA,QAAA,kBAAiB,KAAK,YAAY,GAAU,YAAY,IACxD,CAAA,GAAE,GAAA;MAEV,CAAC;IACH;AAZa,YAAA,mBAAgB;AActB,QAAM,yBAAyB,SACpC,OACA,IAAkE;UAAhE,SAAM,GAAA,QAAE,eAAY,GAAA;AAEtB,UAAI,cAAyB,CAAA;AAC7B,UAAI,MAAM,MACP,OAAO,SAAA,MAAI;AAAA,YAAAC;AAAI,gBAAAA,MAAC,KAAK,YAAY,OAAS,QAAAA,QAAA,SAAA,SAAAA,IAAE;MAAM,CAAA,EAClD,IAAI,SAAA,MAAI;AACP,sBAAc,YAAY,QACxB,GAAA,QAAA,wBACE,KAAK,YAAY,GACjB,EAAE,QAAQ,aAAY,CAAE,CACzB;AAEH,eAAO,KAAK,MAAM;MACpB,CAAC;AAEH,aAAO,IAAI,OAAO,WAAW;IAC/B;AAlBa,YAAA,yBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEnC,QAAA,UAAA,aAAA,eAAA;AACA,QAAA,eAAA,gBAAA,oBAAA;AAIA,QAAA;;MAAA,SAAA,QAAA;AAAmB,kBAAAC,OAAA,MAAA;AAAnB,iBAAAA,QAAA;;QAYA;AAXE,QAAAA,MAAA,UAAA,SAAA,WAAA;AACE,cAAM,KAAiD,KAAK,OAApD,WAAQ,GAAA,UAAE,YAAS,GAAA,WAAE,cAAW,GAAA,aAAK,QAAK,OAAA,IAA5C,CAAA,YAAA,aAAA,aAAA,CAA8C;AACpD,cAAM,kBAAiB,GAAA,aAAA,SAAG,iBAAiB,WAAW;YACpD,4BAA4B;YAC5B,6BAA6B,CAAC;WAC/B;AAED,iBACE,QAAA,QAAA,cAAA,KAAA,SAAA,EAAG,WAAW,eAAc,GAAM,KAAK,CAAA;QAE3C;AACF,eAAAA;MAAA,EAZmB,QAAA,aAAa;;AAchC,YAAA,UAAe;;;;;;;;;;;;ACnBf,QAAA,SAAA,gBAAA,cAAA;AAEA,YAAA,UAAe,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFf,QAAA,UAAA,aAAA,eAAA;AACA,QAAA,eAAA,gBAAA,oBAAA;AAEA,QAAA,SAAA,gBAAA,eAAA;AAGA,QAAA;;MAAA,SAAA,QAAA;AAA2B,kBAAAC,eAAA,MAAA;AAA3B,iBAAAA,gBAAA;AAAA,cAAA,QAAA,WAAA,QAAA,OAAA,MAAA,MAAA,SAAA,KAAA;AAKE,gBAAA,qBAAgE,SAAC,IAAe;gBAAb,cAAW,GAAA;AAAO,mBACnF,QAAA,QAAA,cAAC,OAAA,SAAI,EACH,WAAU,sBACV,YAAwB,CAAA;UAHyD;AAOrF,gBAAA,eAAe,SAAC,GAAa;AACrB,gBAAA,KAAoB,MAAK,OAAvB,OAAI,GAAA,MAAE,UAAO,GAAA;AAErB,mBAAO,QAAQ,aAAa,GAAG,IAAI;UACrC;AAEA,gBAAA,cAAc,SAAC,GAAa;AACpB,gBAAA,KAAoB,MAAK,OAAvB,OAAI,GAAA,MAAE,UAAO,GAAA;AAErB,mBAAO,QAAQ,YAAY,GAAG,IAAI;UACpC;;QAyHF;AAvHE,QAAAA,cAAA,UAAA,SAAA,WAAA;;AACQ,cAAA,KAA0C,KAAK,OAA7C,OAAI,GAAA,MAAE,SAAM,GAAA,QAAE,UAAO,GAAA,SAAE,QAAK,GAAA,OAAE,QAAK,GAAA;AAEzC,cAAA,WASE,QAAO,UART,aAQE,QAAO,YAPT,UAOE,QAAO,SANT,kBAME,QAAO,iBALT,cAKE,QAAO,aAJT,SAIE,QAAO,QAHT,eAGE,QAAO,cAFT,mBAEE,QAAO,kBADT,KACE,QAAO,oBADT,qBAAkB,OAAA,SAAG,KAAK,qBAAkB;AAG9C,cAAM,cAAc,iBAAiB,IAAI;AACzC,cAAM,aAAa,CAAC,UAAU,YAAY,SAAS,MAAM,MAAM,KAAK,MAAM;AAC1E,cAAM,cAAc,KAAK,YAAY,KAAK,KAAK,YAAY,EAAE,SAAS;AACtE,cAAI,cAAc;AAElB,cAAI,WAAW,CAAA;AACf,cAAI,eAAe,CAAA;AACnB,cAAI;AAEJ,cAAI,CAAC,QAAQ;AACX,gBAAI,UAAU;AACZ,yBAAQ,SAAA,SAAA,CAAA,GACH,QAAQ,GAAA,EACX,cAAc,KAAK,aAAY,CAAA;mBAE5B;AACL,kBAAI,OAAO,gBAAgB,YAAY;AACrC,8BAAc,YAAY,EAAE,MAAM,OAAO,MAAK,CAAE;yBACvC,OAAO,gBAAgB,aAAa;AAC7C,8BAAc,CAAC;;AAGjB,kBAAI,aAAa;AACf,+BAAY,SAAA,SAAA,CAAA,GACP,YAAY,GAAA,EACf,WAAW,MACX,aAAa,KAAK,YAAW,CAAA;;;;AAMrC,cAAI,SAAS;AACX,6BAAiB,QAAA,QAAA,cAAA,QAAA,SAAA,EAAM,WAAU,wBAAuB,GAAK,YAAY,GAAG,OAAO;iBAE9E;AACL,uBAAQ,SAAA,SAAA,CAAA,GACH,QAAQ,GACR,YAAY;;AAInB,cAAM,0BAA0B,kBAC5B,SACF,WAAA;AAAM,mBAAA,QAAQ,iBAAiB,IAAI;UAA7B;AAER,cAAM,eAAe,cAEjB,QAAA,QAAA,cAAA,QAAA,EAAM,SAAS,wBAAuB,GACnC,mBAAmB,EAAE,aAAa,KAAI,CAAE,CAAC,IAG5C;AAEJ,cAAM,gBAAgB,gBAAA,OAAgB,SAAS,UAAU,EAAE;AAC3D,cAAM,YAAY;YAChB,YAAW,GAAA,aAAA,SACP,eACA,GAAA,OAAG,eAAa,GAAA,EAAA,OAAI,KAAK,MAAM,CAAC,IAAE,KAAA;cAEhC,eAAe;eACf,GAAC,GAAA,OAAG,eAAa,iBAAA,CAAiB,IAAG,aACrC,GAAC,GAAA,OAAG,eAAa,iBAAA,CAAiB,IAAG,eAAe,CAAC,aACrD,GAAC,GAAA,OAAG,eAAa,sBAAA,CAAsB,IAAG,eAAe,aACzD,GAAC,GAAA,OAAG,eAAa,wBAAA,CAAwB,IAAG,eAAe;;AAKnE,cAAM,UAAU,WAAW;YACzB;YACA;YACA,SAAS;YACT;YACA;YACA;WACD;AAED,cAAI,CAAC;AAAS,mBAAO;AAErB,iBACE,QAAA,QAAA;YAAA;YAAA,SAAA,CAAA,GAAQ,SAAS;YACf,QAAA,QAAA,cAAA,OAAA,SAAA,EAAK,WAAU,qBAAoB,GAAK,QAAQ,GAC7C,OAAO;YAGT,eAAe,CAAC,eACf,QAAA,QAAA,cAAA,MAAA,EAAI,WAAU,gBAAe,GACzB,KAAK,YAAY,EAAa,IAAI,SAACC,OAAM,GAAC;AAC1C,qBACE,QAAA,QAAA,cAACD,eAAY,EACX,KAAK,GACL,OAAO,GACP,OAAO,QAAQ,GACf,MAAMC,OACN,SACA,OAAc,CAAA;YAGpB,CAAC,CAAC;UAEL;QAGP;AA7IO,QAAAD,cAAA,eAA2C;UAChD,OAAO;;AA6IX,eAAAA;QA/I2B,QAAA,aAAa;;AAiJxC,YAAA,UAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJf,QAAA,UAAA,aAAA,eAAA;AACA,QAAA,iCAAA,gBAAA,sCAAA;AACA,QAAA,wBAAA,gBAAA,6BAAA;AACA,QAAA,eAAA,gBAAA,oBAAA;AAEA,QAAA,UAAA;AAWA,QAAA,iBAAA,gBAAA,sBAAA;AAEA,QAAA;;MAAA,SAAA,QAAA;AAAuB,kBAAAE,WAAA,MAAA;AAQrB,iBAAAA,UAAY,OAAoB;AAAhC,cAAA,QACE,OAAA,KAAA,MAAM,KAAK,KAAC;AARd,gBAAA,KAAqB;AACrB,gBAAA,eAAqC;AACrC,gBAAA,QAAQ;YACN,MAAM,EAAE,GAAG,EAAC;YACZ,OAAO,EAAE,GAAG,EAAC;;AAyEf,gBAAA,WAAqB,SAAC,SAAO;AACrB,gBAAA,KAAsC,MAAK,OAAzC,SAAM,GAAA,QAAE,eAAY,GAAA,cAAE,YAAS,GAAA;AAC/B,gBAAA,QAAU,MAAK,MAAK;AAE5B,gBAAI,YAAY,QAAQ;AACtB,oBAAK,SAAS;gBACZ,gBAAgB,aACZ,GAAA,QAAA,wBAAuB,OAAO,EAAC,QAAQ,aAAY,CAAC,IACpD,CAAA;eACL;uBAEQ,YAAY,OAAO;AAC5B,oBAAK,SAAS;gBACZ,gBAAgB,YACZ,CAAA,KACA,GAAA,QAAA,wBAAuB,OAAO,EAAC,QAAQ,aAAY,CAAC;eACzD;wBAEQ,GAAA,QAAA,SAAQ,OAAO,GAAG;AAC3B,oBAAK,SAAS;gBACZ,iBAAgB,GAAA,QAAA,wBAAuB,OAAO,EAAC,QAAQ,aAAY,CAAC,EACjE,OAAO,SAAA,IAAE;AAAI,yBAAC,QAAQ,QAAQ,EAAE,IAAI,OAAQ;gBAA/B,CAAwC;eACzD;;UAEL;AAKA,gBAAA,kBAAkB,WAAA;AAChB,qBAAS,iBAAiB,aAAa,MAAK,WAAW;AACvD,qBAAS,iBAAiB,WAAW,MAAK,SAAS;AACnD,qBAAS,iBAAiB,WAAW,MAAK,SAAS;UACrD;AAEA,gBAAA,iBAAiB,WAAA;AACf,qBAAS,oBAAoB,aAAa,MAAK,WAAW;AAC1D,qBAAS,oBAAoB,WAAW,MAAK,SAAS;AACtD,qBAAS,oBAAoB,WAAW,MAAK,SAAS;AACtD,kBAAK,eAAe;UACtB;AAyKA,gBAAA,eAAe,SAAC,MAAU;AAChB,gBAAA,eAAiB,MAAK,MAAK;AACnC,gBAAI,QAAQ;AAEZ,gBAAI,KAAK,YAAY,EAAE,SAAS,GAAG;AACjC,kBAAM,iBAAiB,KAAK,YAAY,EAAE,IAAI,MAAK,YAAY;AAC/D,uBAAS,KAAK,IAAG,MAAR,MAAY,cAAc;;AAGrC,mBAAO;UACT;AAkHA,gBAAA,mBAAmB,SAAC,MAAU;AACtB,gBAAA,KAAwB,MAAK,OAA3B,YAAS,GAAA,WAAE,SAAM,GAAA;AACjB,gBAAA,iBAAmB,MAAK,MAAK;AAErC,mBAAO,CAAC,EAAG,eAAe,QAAQ,KAAK,MAAM,CAAC,IAAI,OAAQ;UAC5D;AAKA,gBAAA,cAAc,SAAC,GAAe,MAAU;AAC9B,gBAAA,cAAgB,MAAK,MAAK;AAElC,cAAE,eAAc;AAChB,cAAE,gBAAe;AAEjB,gBAAI,EAAE,EAAE,kBAAkB;AAAU;AAEpC,kBAAK,MAAK,GAAA,QAAA,SAAQ,EAAE,QAAQ,gBAAgB;AAE5C,kBAAK,gBAAe;AACpB,kBAAK,YAAY,CAAC;AAClB,wBAAY,EAAC,UAAU,KAAI,CAAC;AAE5B,kBAAK,SAAS;cACZ,UAAU;cACV,UAAU,MAAK,MAAM;aACtB;UACH;AAEA,gBAAA,YAAY,SAAC,GAAsB,UAAkB;AAC3C,gBAAA,YAAc,MAAK,MAAK;AAEhC,kBAAC,QAAD,MAAC,SAAA,SAAD,EAAG,eAAc;AAEjB,kBAAK,eAAc;AACnB,kBAAK,KAAK;AACV,sBAAS;AAET,uBACI,MAAK,WAAU,IACf,MAAK,UAAS;UACpB;AAEA,gBAAA,cAAc,SAAC,GAAa;AACpB,gBAAA,KAAuB,MAAK,OAA1B,QAAK,GAAA,OAAE,YAAS,GAAA;AAChB,gBAAA,WAAa,MAAK,MAAK;AACvB,gBAAA,UAAqB,EAAC,SAAb,UAAY,EAAC;AAC9B,gBAAM,kBAAiB,GAAA,QAAA,mBAAkB,SAAS,OAAO;AACzD,gBAAM,SAAS,SAAS,cAA2B,aAAA,OAAa,OAAK,wCAAA,CAAwC;AAE7G,gBAAI,CAAC,MAAK,cAAc;AACtB,kBAAM,UAAS,GAAA,QAAA,eAAc,MAAK,EAAE;AACpC,kBAAM,YAAS,GAAA,QAAA,gBAAe,MAAK,EAAE;AAErC,oBAAK,eAAY,SAAA,EACf,WAAW,OAAO,MAAM,UAAU,SAAO,KACzC,YAAY,OAAO,OAAO,UAAU,SAAO,KAAI,GAC5C,cAAc;mBAGd;AACL,oBAAK,eAAY,SAAA,SAAA,CAAA,GACZ,MAAK,YAAY,GACjB,cAAc;AAEnB,qBAAO,KAAK,cAAc,EAAE,QAAQ,SAAC,KAAgC;AACnE,uBAAO,MAAM,GAAG,IAAI,eAAe,GAAG;cACxC,CAAC;AAED,kBAAM,QAAQ,UAAU,MAAK,MAAM,KAAK;AACxC,kBACG,SAAS,KAAK,MAAK,MAAM,MAAM,KAAK,KACpC,SAAS,KAAK,MAAK,MAAM,MAAM,KAAK,GACrC;AACA,sBAAK,MAAM,MAAM,KAAK;qBACjB;AACL,sBAAK,MAAM,MAAM,IAAI;;AAEvB,oBAAK,MAAM,KAAK,IAAI;AAEpB,kBAAI,KAAK,IAAI,MAAK,MAAM,MAAM,CAAC,IAAI,WAAW;AAC5C,oBAAI,MAAK,MAAM,MAAM,IAAI,GAAG;AAC1B,wBAAK,iBAAiB,QAAQ;uBACzB;AACL,wBAAK,iBAAiB,QAAQ;;AAGhC,sBAAK,MAAM,MAAM,IAAI;;;UAG3B;AAEA,gBAAA,eAAe,SAAC,GAAe,MAAU;AACvC,cAAE,eAAc;AAChB,cAAE,gBAAe;AAEX,gBAAA,KAAsC,MAAK,OAAzC,YAAS,GAAA,WAAE,SAAM,GAAA,QAAE,eAAY,GAAA;AAC/B,gBAAA,WAAa,MAAK,MAAK;AAC/B,gBAAI,SAAS,MAAM,MAAM,KAAK,MAAM;AAAG;AAEvC,gBAAM,WAAW,MAAK,YAAY,SAAS,MAAM,CAAC;AAClD,gBAAM,SAAS,MAAK,YAAY,KAAK,MAAM,CAAC;AAK5C,gBAAI,gBAAgB,CAAA;AACpB,gBAAI,aAAa,SAAS,SAAS,GAAG;AACpC,kBAAM,WAAS,MAAK,cAAc,SAAS,MAAM,GAAG,EAAE,CAAC;AACvD,kBAAI,SAAO,YAAY,EAAE,WAAW,GAAG;AACrC,gCAAgB,MAAK,iBAAiB,UAAQ,IAAI;;;AAItD,kBAAK,SAAS,EAAE,UAAU,UAAU,OAAM,GAAI,aAAa;UAC7D;AAEA,gBAAA,mBAAmB,SAAC,MAAY,UAAe;AACvC,gBAAA,KAAwB,MAAK,OAA3B,YAAS,GAAA,WAAE,SAAM,GAAA;AACjB,gBAAA,iBAAmB,MAAK,MAAK;AACrC,gBAAM,cAAc,MAAK,iBAAiB,IAAI;AAE9C,gBAAM,WAAW;cACf,gBAAiB,gBAAgB,YAC7B,eAAe,OAAO,SAAA,IAAE;AAAI,uBAAA,OAAO,KAAK,MAAM;cAAlB,CAAmB,IAC/C,eAAe,OAAO,KAAK,MAAM,CAAC;;AAGxC,gBAAI,UAAU;AACZ,qBAAO;mBACF;AACL,oBAAK,SAAS,QAAQ;AACtB,oBAAK,iBAAiB,SAAS,cAAc;;UAEjD;AAEA,gBAAA,mBAAmB,SAAC,KAAoC;AAChD,gBAAA,KAAkC,MAAK,OAArC,YAAS,GAAA,WAAE,mBAAgB,GAAA;AAEnC,6BAAiB,YAAY,EAAE,SAAS,IAAG,IAAK,EAAE,WAAW,IAAG,CAAE;UACpE;AAEA,gBAAA,YAAY,SAAC,GAAgB;AAC3B,gBAAI,EAAE,UAAU,IAAI;AAElB,oBAAK,UAAU,MAAM,IAAI;;UAE7B;AAriBE,gBAAK,QAAQ;YACX,OAAO,CAAA;YACP,UAAU;YACV,UAAU;YACV,SAAS;YACT,gBAAgB,CAAA;;;QAEpB;AAoBA,QAAAA,UAAA,UAAA,oBAAA,WAAA;AACM,cAAA,KAA0B,KAAK,OAA7B,QAAK,GAAA,OAAE,eAAY,GAAA;AAGzB,mBAAQ,GAAA,QAAA,kBAAiB,OAAO,YAAY;AAE5C,eAAK,SAAS,EAAE,MAAK,CAAE;QACzB;AAEA,QAAAA,UAAA,UAAA,qBAAA,SAAmB,WAAwB;AAA3C,cAAA,QAAA;AACQ,cAAA,KAAsD,MAApD,KAAA,GAAA,OAAgB,WAAQ,GAAA,OAAE,eAAY,GAAA,cAAI,QAAK,GAAA;AACvD,cAAM,kBAAiB,GAAA,+BAAA,SAAc,SAAA,SAAA,CAAA,GAAM,IAAI,GAAA,EAAE,OAAO,WAAW,MAAK,CAAA,GAAI,KAAK,OAAO,KAAK;AAE7F,cAAI,gBAAgB;AAClB,iBAAK,eAAc;AAEnB,iBAAK,SAAS,SAAA,WAAS;AACrB,kBAAM,WAAQ,SAAA,SAAA,CAAA,GACT,SAAS,GAAA,EACZ,QAAO,GAAA,QAAA,kBAAiB,UAAU,YAAY,GAC9C,UAAU,MACV,SAAS,MAAK,CAAA;AAGhB,kBAAI,UAAU,cAAc,MAAK,MAAM,WAAW;AAChD,yBAAS,iBAAiB,CAAA;AAC1B,sBAAK,iBAAiB,SAAS,cAAc;;AAG/C,qBAAO;YACT,CAAC;;QAEL;AAEA,QAAAA,UAAA,UAAA,uBAAA,WAAA;AACE,eAAK,eAAc;QACrB;AA+CA,QAAAA,UAAA,UAAA,WAAA,SACE,IACA,YAAuC;cADrC,WAAQ,GAAA,UAAE,WAAQ,GAAA,UAAE,SAAM,GAAA;AAC5B,cAAA,eAAA,QAAA;AAAA,yBAAA,CAAA;UAAuC;AAEjC,cAAA,KAAkC,KAAK,OAArC,eAAY,GAAA,cAAE,gBAAa,GAAA;AACnC,cAAM,eAAe,KAAK,aAAa,QAAQ;AACzC,cAAA,QAAU,KAAK,MAAK;AAI1B,cAAM,aAAa,KAAK,gBAAgB,UAAU,QAAQ,YAAY;AAEtE,cAAI,WAAW,WAAW;AAAG;AAG7B,cAAM,kBAAkB,WAAW,SAAS,OAAO,SAC/C,SACA,OAAO,MAAM,GAAG,EAAE;AACtB,cAAM,oBAAoB,KAAK,cAAc,eAAe;AAC5D,cAAI,CAAC,cAAc,EAAC,UAAU,kBAAiB,CAAC;AAAG;AAEnD,cAAM,aAAa,KAAK,cAAc,UAAU;YAC9C,aAAa;YACb;WACD;AAED,cAAM,aAAa,KAAK,cAAc,YAAY;YAChD,aAAa;YACb,eAAe,CAAC,QAAQ;YACxB;WACD;AAED,mBAAQ,GAAA,sBAAA,SAAO,OAAO,UAAU;AAChC,mBAAQ,GAAA,sBAAA,SAAO,OAAO,UAAU;AAEhC,eAAK,SAAS,SAAA,WAAS;AAAI,mBAAA,SAAA,SAAA,SAAA,CAAA,GACtB,SAAS,GAAA,EACZ,OACA,SAAS,KAAI,CAAA,GACV,UAAU;UAJY,CAKzB;AAEF,cAAI,WAAW,mBAAmB,KAAK,MAAM,gBAAgB;AAC3D,iBAAK,iBAAiB,WAAW,cAAc;;QAEnD;AAEA,QAAAA,UAAA,UAAA,mBAAA,SAAiB,UAAc;AACvB,cAAA,KAAgD,KAAK,OAAnD,WAAQ,GAAA,UAAE,SAAM,GAAA,QAAE,eAAY,GAAA,cAAE,YAAS,GAAA;AACjD,cAAM,WAAW,KAAK,YAAY,SAAS,MAAM,CAAC;AAClD,cAAM,YAAY,SAAS,SAAS,SAAS,CAAC;AAC9C,cAAM,WAAW,SAAS,SAAS,KAAK,aAAa,QAAQ;AAG7D,cAAI,YAAY,KAAK,YAAY,UAAU;AACzC,gBAAM,cAAc,KAAK,cAAc,SAAS,MAAM,GAAG,EAAE,EAAE,OAAO,YAAY,CAAC,CAAC;AAGlF,gBAAI,CAAC,YAAY,YAAY,EAAE,UAAU,CAAC,KAAK,iBAAiB,WAAW,GAAG;AAC5E,kBAAM,SAAS,SACZ,MAAM,GAAG,EAAE,EACX,OAAO,YAAY,CAAC,EACpB,OAAO,YAAY,YAAY,EAAE,MAAM;AAK1C,kBAAI,gBAAgB,CAAA;AACpB,kBAAI,aAAa,CAAC,YAAY,YAAY,EAAE,QAAQ;AAClD,gCAAgB,KAAK,iBAAiB,aAAa,IAAI;;AAGzD,mBAAK,SAAS,EAAE,UAAU,UAAU,OAAM,GAAI,aAAa;;;QAGjE;AAEA,QAAAA,UAAA,UAAA,mBAAA,SAAiB,UAAc;AACvB,cAAA,KAAsC,KAAK,OAAzC,SAAM,GAAA,QAAE,eAAY,GAAA,cAAE,YAAS,GAAA;AACvC,cAAM,WAAW,KAAK,YAAY,SAAS,MAAM,CAAC;AAClD,cAAM,YAAY,SAAS,SAAS,SAAS,CAAC;AAG9C,cAAI,SAAS,SAAS,GAAG;AACvB,gBAAM,WAAS,KAAK,cAAc,SAAS,MAAM,GAAG,EAAE,CAAC;AAGvD,gBAAI,YAAY,MAAM,SAAO,YAAY,EAAE,QAAQ;AACjD,kBAAI,SAAS,SAAS,MAAM,GAAG,EAAE;AACjC,qBAAO,OAAO,SAAS,CAAC,KAAK;AAK7B,kBAAI,gBAAgB,CAAA;AACpB,kBAAI,aAAa,SAAO,YAAY,EAAE,WAAW,GAAG;AAClD,gCAAgB,KAAK,iBAAiB,UAAQ,IAAI;;AAGpD,mBAAK,SAAS,EAAE,UAAU,UAAU,OAAM,GAAI,aAAa;;;QAGjE;AAEA,QAAAA,UAAA,UAAA,YAAA,WAAA;AACQ,cAAA,KAAuB,KAAK,OAA1B,WAAQ,GAAA,UAAE,SAAM,GAAA;AAClB,cAAA,KAA+B,KAAK,OAAlC,QAAK,GAAA,OAAE,UAAO,GAAA,SAAE,WAAQ,GAAA;AAEhC,eAAK,SAAS;YACZ,UAAU;YACV,UAAU;YACV,SAAS;WACV;AAED,cAAI,YAAY,SAAS;AACvB,gBAAM,aAAa,KAAK,YAAY,SAAS,MAAM,GAAG,KAAK;AAC3D,qBAAS,EAAC,OAAO,UAAU,WAAU,CAAC;;QAE1C;AAEA,QAAAA,UAAA,UAAA,aAAA,WAAA;AACU,cAAA,WAAa,KAAK,MAAK;AAE/B,eAAK,SAAS;YACZ,OAAO;YACP,UAAU;YACV,UAAU;YACV,SAAS;WACV;QACH;AAKA,QAAAA,UAAA,UAAA,cAAA,SAAY,IAAa,OAAwB;AAAjD,cAAA,QAAA;AAAyB,cAAA,UAAA,QAAA;AAAA,oBAAQ,KAAK,MAAM;UAAK;AACzC,cAAA,KAA2B,KAAK,OAA9B,SAAM,GAAA,QAAE,eAAY,GAAA;AAC5B,cAAI,OAAiB,CAAA;AAErB,gBAAM,MAAM,SAAC,MAAM,GAAC;AAClB,gBAAI,KAAK,MAAM,MAAM,IAAI;AACvB,mBAAK,KAAK,CAAC;uBACF,KAAK,YAAY,GAAG;AAC7B,kBAAM,eAAe,MAAK,YAAY,IAAI,KAAK,YAAY,CAAC;AAE5D,kBAAI,aAAa,QAAQ;AACvB,uBAAO,KAAK,OAAO,CAAC,EAAE,OAAO,YAAY;;;AAI7C,mBAAO,KAAK,WAAW;UACzB,CAAC;AAED,iBAAO;QACT;AAEA,QAAAA,UAAA,UAAA,gBAAA,SAAc,MAAgB,OAAwB;AAAxB,cAAA,UAAA,QAAA;AAAA,oBAAQ,KAAK,MAAM;UAAK;AAC5C,cAAA,eAAiB,KAAK,MAAK;AACnC,cAAI,OAAoB;AAExB,eAAK,QAAQ,SAAA,OAAK;AAChB,gBAAM,OAAO,OAAO,KAAK,YAAY,IAAI;AACzC,mBAAO,KAAK,KAAK;UACnB,CAAC;AAED,iBAAO;QACT;AAcA,QAAAA,UAAA,UAAA,gBAAA,SACE,MACA,SAIM;AAJN,cAAA,YAAA,QAAA;AAAA,sBAAA,CAAA;UAIM;AAEN,cAAM,aAA6B,CAAA;AACnC,cAAM,cAAc,QAAQ,eAAe;AAC3C,cAAM,gBAAgB,QAAQ,iBAAiB,CAAA;AAC/C,cAAM,YAAY,KAAK,SAAS;AAChC,cAAI,cAAc;AAElB,eAAK,QAAQ,SAAC,OAAO,GAAC;;AACpB,gBAAI,MAAM,WAAW;AACnB,0BAAY,UAAU,CAAA,cAAA,CAAE,OAAO,WAAW,GAAK,eAAa,IAAA,CAAA;mBACvD;AACL,kBAAM,WAAW,CAAA;AACjB,0BAAY,KAAK,KAAC,KAAA,CAAA,GAAK,GAAC,QAAQ,YAAY,IAAG,UAAQ;AACvD,4BAAc;;UAElB,CAAC;AAED,iBAAO;QACT;AAEA,QAAAA,UAAA,UAAA,kBAAA,SAAgB,UAAoB,UAAoB,cAAoB;AACpE,cAAA,KAA6B,KAAK,OAAhC,eAAY,GAAA,cAAE,WAAQ,GAAA;AAC9B,cAAM,cAAc,SAAS,SAAS;AACtC,cAAM,cAAc,SAAS,SAAS;AACtC,cAAM,WAAW,SAAS,SAAS,eAAe;AAElD,cAAI,SAAS,SAAS,SAAS,QAAQ;AAErC,gBAAI,eAAa;AAGjB,gBAAI,WAAW,YAAY,SAAS,QAAQ;AAC1C,qBAAO,KAAK,gBAAgB,UAAU,SAAS,MAAM,GAAG,EAAE,GAAG,YAAY;;AAG3E,mBAAO,SAAS,IAAI,SAAC,WAAW,GAAC;AAC/B,kBAAI,cAAY;AACd,uBAAO,MAAM,cACT,YAAY,IACZ;;AAGN,kBAAI,OAAO,SAAS,CAAC,MAAM,UAAU;AACnC,uBAAO;;AAGT,kBAAI,SAAS,CAAC,IAAI,SAAS,CAAC,KAAK,MAAM,aAAa;AAClD,+BAAa;AACb,uBAAO,YAAY;;AAGrB,qBAAO;YACT,CAAC;qBAEQ,SAAS,WAAW,SAAS,QAAQ;AAE9C,gBAAI,SAAS,WAAW,IAAI,SAAS,WAAW,GAAG;AACjD,kBAAM,SAAS,KAAK,cAAc,QAAQ;AAE1C,kBACI,WAAW,YACX,OAAO,YAAY,KACnB,OAAO,YAAY,EAAE,UACrB,CAAC,KAAK,iBAAiB,MAAM,GAC/B;AACA,uBAAO,SACJ,MAAM,GAAG,EAAE,EACX,OAAO,SAAS,WAAW,IAAI,CAAC,EAChC,OAAO,CAAC;;;;AAKjB,iBAAO;QACT;AAEA,QAAAA,UAAA,UAAA,iBAAA,WAAA;AACQ,cAAA,KAQF,KAAK,OAPP,aAAU,GAAA,YACV,qBAAkB,GAAA,oBAClB,UAAO,GAAA,SACP,kBAAe,GAAA,iBACf,cAAW,GAAA,aACX,SAAM,GAAA,QACN,eAAY,GAAA;AAEN,cAAA,WAAa,KAAK,MAAK;AAE/B,iBAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YAEA,kBAAkB,KAAK;YACvB,aAAa,KAAK;YAClB,cAAc,KAAK;YACnB,kBAAkB,KAAK;;QAE3B;AA2JA,QAAAA,UAAA,UAAA,kBAAA,WAAA;AACQ,cAAA,KAAoB,KAAK,OAAvB,QAAK,GAAA,OAAE,SAAM,GAAA;AACb,cAAA,WAAa,KAAK,MAAK;AAC/B,cAAM,KAAK,SAAS,cAAc,aAAA,OAAa,OAAK,kBAAA,EAAA,OAAmB,SAAS,MAAM,CAAC,CAAE;AAEzF,cAAI,aAA4B,CAAA;AAChC,cAAI,IAAI;AACN,uBAAW,QAAQ,GAAG;;AAExB,cAAI,KAAK,cAAc;AACrB,yBAAU,SAAA,SAAA,CAAA,GACL,UAAU,GACV,KAAK,YAAY;;AAIxB,cAAM,UAAU,KAAK,eAAc;AAEnC,iBACE,QAAA,QAAA;YAAA;YAAA,EAAK,WAAU,sBAAqB;YAClC,QAAA,QAAA;cAAA;cAAA,EAAI,WAAU,iBAAgB,OAAO,WAAU;cAC7C,QAAA,QAAA,cAAC,eAAA,SAAY,EACX,MAAM,UACN,SACA,QAAM,KAAA,CAAA;YACN;UACC;QAGX;AAEA,QAAAA,UAAA,UAAA,SAAA,WAAA;AACQ,cAAA,KAA+B,KAAK,OAAlC,QAAK,GAAA,OAAE,YAAS,GAAA,WAAE,SAAM,GAAA;AAC1B,cAAA,KAAsB,KAAK,OAAzB,QAAK,GAAA,OAAE,WAAQ,GAAA;AACvB,cAAM,UAAU,KAAK,eAAc;AAEnC,iBACE,QAAA,QAAA;YAAA;YAAA,EAAK,YAAW,GAAA,aAAA,SAAG,WAAW,YAAY,YAAA,OAAY,KAAK,GAAI,EAAE,kBAAkB,SAAQ,CAAE,EAAC;YAC5F,QAAA,QAAA,cAAA,MAAA,EAAI,WAAU,gBAAe,GAC1B,MAAM,IAAI,SAAC,MAAM,GAAC;AACjB,qBACE,QAAA,QAAA,cAAC,eAAA,SAAY,EACX,KAAK,KAAK,MAAM,GAChB,OAAO,GACP,MACA,QAAgB,CAAA;YAGtB,CAAC,CAAC;YAGH,YAAY,KAAK,gBAAe;UAAE;QAGzC;AAvlBO,QAAAA,UAAA,eAAuC;UAC5C,cAAc;UACd,WAAW;UACX,eAAe,WAAA;AAAM,mBAAA;UAAA;UACrB,iBAAiB;UACjB,aAAa;UACb,OAAO,KAAK,OAAM,EAAG,SAAS,EAAE,EAAE,MAAM,CAAC;UACzC,QAAQ;UACR,OAAO,CAAA;UACP,UAAU;UACV,UAAU,WAAA;UAAO;UACjB,kBAAkB,WAAA;UAAO;UACzB,WAAW,WAAA;UAAO;UAClB,aAAa,WAAA;UAAO;UACpB,YAAY,SAAC,IAAQ;gBAAN,OAAI,GAAA;AAAO,mBAAA,OAAO,IAAI;UAAX;UAC1B,WAAW;;AAykBf,eAAAA;QA3mBuB,QAAA,SAAS;;AA6mBhC,YAAA,UAAe;;;;;;;;;;;;AC/nBf,QAAA,aAAA,gBAAA,kBAAA;AAEA,YAAA,UAAe,WAAA;;;;;ACFf;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACD5D,QAAA,aAAA,gBAAA,mBAAA;AAEA,iBAAA,iBAAA,OAAA;AACA,YAAA,UAAe,WAAA;;;",
  "names": ["validateFormat", "_a", "Icon", "NestableItem", "item", "Nestable"]
}
