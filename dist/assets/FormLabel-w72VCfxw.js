import{r as t,j as c,c as u,e as C}from"./index-yuUUyctO.js";import"./warning-DlN2PdZY.js";import{P as f}from"./index-CI1nDiKN.js";import{C as F}from"./Col-C9voJz8y.js";const b={type:f.string,tooltip:f.bool,as:f.elementType},x=t.forwardRef(({as:s="div",className:a,type:o="valid",tooltip:r=!1,...l},e)=>c.jsx(s,{...l,ref:e,className:u(a,`${o}-${r?"tooltip":"feedback"}`)}));x.displayName="Feedback";x.propTypes=b;const y=t.createContext({}),$=t.forwardRef(({bsPrefix:s,type:a,size:o,htmlSize:r,id:l,className:e,isValid:p=!1,isInvalid:i=!1,plaintext:d,readOnly:n,as:m="input",...j},N)=>{const{controlId:v}=t.useContext(y);return s=C(s,"form-control"),c.jsx(m,{...j,type:a,size:r,ref:N,readOnly:n,id:l||v,className:u(e,d?`${s}-plaintext`:s,o&&`${s}-${o}`,a==="color"&&`${s}-color`,p&&"is-valid",i&&"is-invalid")})});$.displayName="FormControl";const G=Object.assign($,{Feedback:x}),R=t.forwardRef(({controlId:s,as:a="div",...o},r)=>{const l=t.useMemo(()=>({controlId:s}),[s]);return c.jsx(y.Provider,{value:l,children:c.jsx(a,{...o,ref:r})})});R.displayName="FormGroup";const w=t.forwardRef(({as:s="label",bsPrefix:a,column:o=!1,visuallyHidden:r=!1,className:l,htmlFor:e,...p},i)=>{const{controlId:d}=t.useContext(y);a=C(a,"form-label");let n="col-form-label";typeof o=="string"&&(n=`${n} ${n}-${o}`);const m=u(l,a,r&&"visually-hidden",o&&n);return e=e||d,o?c.jsx(F,{ref:i,as:"label",className:m,htmlFor:e,...p}):c.jsx(s,{ref:i,className:m,htmlFor:e,...p})});w.displayName="FormLabel";export{R as F,w as a,G as b,x as c,y as d};
